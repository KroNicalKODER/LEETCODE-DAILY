/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(vector<int>& vec,int val,TreeNode* root){
        if(root == NULL) return;       
        val = (val * 10) + root->val;
        solve(vec,val,root->left);
        solve(vec,val,root->right);
        if(root->left==NULL && root->right == NULL){
            vec.push_back(val);
            return;
        }
    }
    int sumNumbers(TreeNode* root) {
        if(root == NULL) return 0;
        vector<int> nums;
        solve(nums,0,root);
        int sum=0;
        for(auto itr : nums) sum+=itr;
        return sum;

    }
};
