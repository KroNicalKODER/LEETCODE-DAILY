/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        ListNode* slow=head,*fast=head;
        while(fast!=NULL) {
            slow = slow->next;
            if(fast->next) fast = fast->next->next;
            else return NULL;
            if(slow == fast) break;
        }
        if(fast==0 || fast->next == NULL) return NULL;
        slow = head;
        while(fast!=slow){
            fast=fast->next;
            slow=slow->next;
        }
        return slow;
    }
};
