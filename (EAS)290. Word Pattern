class Solution {
public:
bool check(string str,char pat,map<char,string>& memo){
    for(auto itr:memo){
        if((str==itr.second && pat!=itr.first)||(str!=itr.second && pat==itr.first)) 
            return false;
    }
    return true;
}
bool wordPattern(string pattern, string s) {
        vector<string> strings;
        string str = "";
        for(int i=0;i<s.length();i++){
            if(s[i]!=' ') str+=s[i];
            else {
                strings.push_back(str);
                str="";
            }
        }
        strings.push_back(str);
        if(strings.size()!=pattern.length()) return false;
        map<char,string> memo;
        for(int i=0;i<pattern.length();i++){
            if(check(strings[i],pattern[i],memo)){
                memo[pattern[i]] = strings[i];
            }
            else{
                return false;
            }
        }
        return true;
    }

};
