class Solution {
public:

    int LCS(string& str1,int i,int j,int n,vector<vector<int>>& dp){
        if(i>j) return 0;

        if(dp[i][j]!=-1) return dp[i][j];
        int ans = 0;
        if(str1[i] == str1[j]){
            ans = 1 + (i!=j) + LCS(str1,i+1,j-1,n,dp);
        }

        else ans = max(LCS(str1,i+1,j,n,dp) , LCS(str1,i,j-1,n,dp));

        return dp[i][j] = ans;
    }

    int longestPalindromeSubseq(string s) {
        int n = s.length();
        vector<vector<int>> dp(n,vector<int>(n,-1));
        return LCS(s,0,n-1,n,dp);
    }
};
